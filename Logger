import logging

class Logger:
    def __init__(self, log_file='system.log'):
        logging.basicConfig(
            filename=log_file,
            level=logging.INFO,
            format='%(asctime)s - %(levelname)s - %(message)s'
        )
        self.logger = logging.getLogger(__name__)

    def log_info(self, message):
        self.logger.info(message)

    def log_warning(self, message):
        self.logger.warning(message)

    def log_error(self, message):
        self.logger.error(message)

    def log_critical(self, message):
        self.logger.critical(message)

    def log_debug(self, message):
        self.logger.debug(message)

    def log_exception(self, message):
        self.logger.exception(message)

    def set_log_level(self, level):
        self.logger.setLevel(level)

    def add_file_handler(self, file_path, level=logging.INFO):
        file_handler = logging.FileHandler(file_path)
        file_handler.setLevel(level)
        formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
        file_handler.setFormatter(formatter)
        self.logger.addHandler(file_handler)

    def add_stream_handler(self, level=logging.INFO):
        stream_handler = logging.StreamHandler()
        stream_handler.setLevel(level)
        formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
        stream_handler.setFormatter(formatter)
        self.logger.addHandler(stream_handler)

    def add_custom_handler(self, handler):
        self.logger.addHandler(handler)
