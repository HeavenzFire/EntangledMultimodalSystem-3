[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    quantum: Quantum computing tests
    classical: Classical computing tests
    integration: Integration tests
    performance: Performance tests
    visualization: Visualization tests
    security: Security tests
    api: API tests
    database: Database tests

# Test configuration
addopts = 
    --verbose
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --benchmark-only
    --benchmark-autosave
    --benchmark-storage=file://./benchmarks
    --benchmark-compare
    --benchmark-compare-fail=min:5%
    --benchmark-histogram=./benchmarks/histograms

# Test timeout
timeout = 300

# Test parallelization
numprocesses = auto
dist = loadscope

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test output
console_output_style = progress

filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning
    ignore::RuntimeWarning
    ignore::ResourceWarning
    ignore::ImportWarning
    ignore::PendingDeprecationWarning
    ignore::DeprecationWarning:qiskit.*
    ignore::UserWarning:qiskit.*
    ignore::FutureWarning:qiskit.*
    ignore::RuntimeWarning:qiskit.*
    ignore::ResourceWarning:qiskit.*
    ignore::ImportWarning:qiskit.*
    ignore::PendingDeprecationWarning:qiskit.* 